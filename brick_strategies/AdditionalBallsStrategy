package bricker.brick_strategies;

import danogl.GameObject;
import danogl.util.Vector2;
import bricker.main.BrickerGameManager;

/**
 * Strategy for an extra 2 puck balls.
 * wraps the basic game manager. Inherits BasicCollisionStrategy.
 * Has a BrickerGameManager as a member.
 */
public class AdditionalBallsStrategy extends BasicCollisionStrategy {
    private static final int N_EXTRA_BALLS = 2;
    private static final int ZERO = 0;
    private BrickerGameManager brickerGameManager;

    /**
     * Builds a new AdditionalBallsStrategy object
     * @param brickerGameManager - the game manger running the current game
     */
    public AdditionalBallsStrategy(BrickerGameManager brickerGameManager) {
        super(brickerGameManager);
        this.brickerGameManager = brickerGameManager;
    }


    @Override
    /**
     * Overrides BasicCollisionStrategy's onCollision, adding the for loop where
     * it's BrickerGameManager object calls his public createPuck to make puckBalls.
     * @param firstObject the brick that was hit
     * @param secondObject the hitting object
     */
    public void onCollision(GameObject firstObject, GameObject secondObject) {
        Vector2 brickCoordinate = firstObject.getCenter();
        for(int i = ZERO; i < N_EXTRA_BALLS; i++) {
            this.brickerGameManager.createPuck(brickCoordinate);
        }
        super.onCollision(firstObject, secondObject);
    }
}
